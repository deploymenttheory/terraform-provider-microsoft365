{
  "@odata.type": "#microsoft.graph.deviceHealthScript",
  "id": "22222222-2222-2222-2222-222222222222",
  "displayName": "Test Maximal Windows Remediation Script - Unique",
  "description": "Maximal Windows remediation script for testing with all features",
  "publisher": "Terraform Provider Test Suite",
  "runAs32Bit": true,
  "runAsAccount": "user",
  "enforceSignatureCheck": true,
  "detectionScriptContent": "# Comprehensive detection script\n$computerName = $env:COMPUTERNAME\n$osVersion = (Get-WmiObject Win32_OperatingSystem).Version\nWrite-Host \"Computer: $computerName\"\nWrite-Host \"OS Version: $osVersion\"\n\n# Check for specific condition\nif (Test-Path \"C:\\temp\\marker.txt\") {\n    Write-Host \"Marker file found - issue detected\"\n    exit 1\n} else {\n    Write-Host \"No issues detected\"\n    exit 0\n}",
  "remediationScriptContent": "# Comprehensive remediation script\n$logPath = \"C:\\temp\\remediation.log\"\n$timestamp = Get-Date -Format \"yyyy-MM-dd HH:mm:ss\"\n\n# Create directory if it doesn't exist\nif (!(Test-Path \"C:\\temp\")) {\n    New-Item -ItemType Directory -Path \"C:\\temp\" -Force\n}\n\n# Log the remediation action\nAdd-Content -Path $logPath -Value \"$timestamp - Remediation started\"\n\n# Remove the marker file\nif (Test-Path \"C:\\temp\\marker.txt\") {\n    Remove-Item \"C:\\temp\\marker.txt\" -Force\n    Add-Content -Path $logPath -Value \"$timestamp - Marker file removed\"\n}\n\nAdd-Content -Path $logPath -Value \"$timestamp - Remediation completed\"\nWrite-Host \"Remediation completed successfully\"\nexit 0",
  "version": "1.0",
  "isGlobalScript": false,
  "deviceHealthScriptType": "deviceHealthScript",
  "roleScopeTagIds": ["0", "1"],
  "assignments": [
    {
      "id": "assignment-id-1",
      "target": {
        "@odata.type": "#microsoft.graph.groupAssignmentTarget",
        "groupId": "44444444-4444-4444-4444-444444444444",
        "deviceAndAppManagementAssignmentFilterId": "55555555-5555-5555-5555-555555555555",
        "deviceAndAppManagementAssignmentFilterType": "include"
      },
      "runSchedule": {
        "@odata.type": "#microsoft.graph.deviceHealthScriptDailySchedule",
        "interval": 1,
        "time": "09:00:00",
        "useUtc": true
      }
    },
    {
      "id": "assignment-id-2",
      "target": {
        "@odata.type": "#microsoft.graph.groupAssignmentTarget",
        "groupId": "33333333-3333-3333-3333-333333333333",
        "deviceAndAppManagementAssignmentFilterId": "66666666-6666-6666-6666-666666666666",
        "deviceAndAppManagementAssignmentFilterType": "exclude"
      },
      "runSchedule": {
        "@odata.type": "#microsoft.graph.deviceHealthScriptHourlySchedule",
        "interval": 4
      }
    },
    {
      "id": "assignment-id-3",
      "target": {
        "@odata.type": "#microsoft.graph.allDevicesAssignmentTarget"
      },
      "runSchedule": {
        "@odata.type": "#microsoft.graph.deviceHealthScriptRunOnceSchedule",
        "date": "2024-12-31",
        "time": "23:59:00",
        "useUtc": false
      }
    }
  ],
  "createdDateTime": "2024-01-01T00:00:00Z",
  "lastModifiedDateTime": "2024-01-01T00:00:00Z",
  "highestAvailableVersion": "1.0"
}