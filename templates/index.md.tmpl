---
page_title: "Provider: Microsoft 365"
description: |-
  {{ .Description }}
---

# {{ .RenderedProviderName }} Provider

The community Microsoft 365 provider allows managing environments and other resources within [Microsoft 365](https://www.microsoft.com/en-gb/microsoft-365/products-apps-services).

!> This code is made available as a experimental purposes only. Features are being actively developed and may have restricted or limited functionality. Future updates may introduce breaking changes, but we follow [Semantic Versioning](https://semver.org/) to help mitigate this. The software may contain bugs, errors, or other issues that could cause service interruption or data loss. We recommend backing up your data and testing in non-production environments. Your feedback is valuable to us, so please share any issues or suggestions you encounter via GitHub issues or join our community Discord [server](https://discord.gg/Uq8zG6g7WE).

## Requirements

This provider requires a minimum of **Terraform >= 1.10**.  For more information on provider installation and constraining provider versions, see the [Provider Requirements documentation](https://developer.hashicorp.com/terraform/language/providers/requirements).

## Installation

To use this provider, add the following to your Terraform configuration:

```terraform
terraform {
  required_providers {
    microsoft365 = {
      source  = "deploymenttheory/microsoft365"
      version = "~> 1.10.4 # Replace with the latest version
    }
  }
}
```

See the official Terraform documentation for more information about [requiring providers](https://developer.hashicorp.com/terraform/language/providers/requirements).

## Authenticating to Microsoft 365

This Terraform provider supports multiple authentication methods for accessing Microsoft 365 services. Each authentication method has specific use cases, 
benefits, and limitations. Please review the appropriate guide in the authentication section to determine which method best suits your deployment scenario.

Supported authentication methods include:

- Client Secret authentication
- Client Certificate authentication 
- Device Code authentication
- Interactive Browser authentication
- Workload Identity authentication
- Managed Identity authentication
- OIDC (generic) authentication
- GitHub OIDC authentication
- Azure DevOps OIDC authentication
- Azure Developer CLI authentication

## Using Environment Variables

We recommend using Environment Variables to pass the credentials to the provider.

## Environment Variables

The Microsoft 365 provider supports various environment variables for authentication and configuration. 
Using environment variables is recommended for sensitive information like client secrets and certificates.

| Name | Description | Used With |
|------|-------------|-----------|
| `M365_TENANT_ID` | The Microsoft Entra ID tenant ID | All authentication methods |
| `M365_AUTH_METHOD` | The authentication method to use | All authentication methods |
| `M365_CLIENT_ID` | The application (client) ID | Most authentication methods |
| `M365_CLIENT_SECRET` | The client secret value | Client Secret authentication |
| `M365_CLIENT_CERTIFICATE_FILE_PATH` | Path to the certificate file (.pfx) | Client Certificate authentication |
| `M365_CLIENT_CERTIFICATE_PASSWORD` | Password for the certificate | Client Certificate authentication |
| `M365_SEND_CERTIFICATE_CHAIN` | Whether to send the certificate chain (true/false) | Client Certificate authentication |
| `M365_USERNAME` | Username for password or browser authentication | Interactive Browser auth |
| `M365_REDIRECT_URL` | Redirect URL for interactive browser authentication | Interactive Browser authentication |
| `M365_MANAGED_IDENTITY_ID` | ID of a user-assigned managed identity | Managed Identity authentication |
| `M365_OIDC_TOKEN_FILE_PATH` | Path to a file containing an OIDC token | OIDC authentication |
| `M365_OIDC_AUDIENCE` | The audience value for OIDC tokens | OIDC and GitHub OIDC authentication |
| `M365_FEDERATED_TOKEN_FILE` | Path to a Kubernetes service account token | Workload Identity authentication |
| `M365_ADDITIONALLY_ALLOWED_TENANTS` | Comma-separated list of tenant IDs allowed for authentication | All authentication methods |
| `M365_CLOUD` | Cloud environment (public, dod, gcc, gcchigh, china, ex, rx) | All authentication methods |
| `M365_DISABLE_INSTANCE_DISCOVERY` | Disable instance discovery (true/false) | All authentication methods |
| `M365_DEBUG_MODE` | Enable debug mode (true/false) | All authentication methods |
| `M365_TELEMETRY_OPTOUT` | Opt out of telemetry (true/false) | All authentication methods |
| `M365_USE_PROXY` | Enable proxy usage (true/false) | All authentication methods |
| `M365_PROXY_URL` | The URL of the proxy server | When using proxy |
| `M365_PROXY_USERNAME` | Username for proxy authentication | When using authenticated proxy |
| `M365_PROXY_PASSWORD` | Password for proxy authentication | When using authenticated proxy |

> Variables passed into the provider block will override the environment variables.

## Additional Provider Configuration

The provider supports additional configuration options for client behavior, telemetry, and debugging:

```terraform
provider "microsoft365" {
  # ... authentication configuration ...
  
  debug_mode = false             # ENV: M365_DEBUG_MODE
  telemetry_optout = false       # ENV: M365_TELEMETRY_OPTOUT
  
  client_options = {
    # ... client configuration options ...
  }
}
```

For a complete list of client options, refer to the provider documentation.

> **Security Note**: Store sensitive values like client secrets, certificates, and passwords using environment variables or Terraform's encrypted state management features. Never commit these values directly in your configuration files.

## Example Usage

{{ tffile "examples/provider/provider.tf" }}

{{ .SchemaMarkdown | trimspace }}


# Resources and Data Sources

Use the navigation to the left to read about the available resources and data sources.

!> By calling `terraform destroy` all the resources that you've created will be permanently deleted. Please be careful with this command when working with production environments. You can use [prevent-destroy](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#prevent_destroy) lifecycle argument in your resources to prevent accidental deletion.  

## Examples

You can find practical examples of using this provider in our examples directory. These examples demonstrate:
- Basic resource management
- Complex configurations
- Integration with Microsoft Graph API
- Best practices for production deployments

For more examples and use cases, visit our [Microsoft 365 Provider Examples](https://github.com/deploymenttheory/terraform-provider-microsoft365/tree/main/examples) directory.

## Releases

A full list of released versions of the Microsoft 365 Terraform Provider can be found in our [GitHub Releases](https://github.com/deploymenttheory/terraform-provider-microsoft365/releases).

Starting from the initial release, changes to the provider in each version are documented in our [CHANGELOG.md](https://github.com/deploymenttheory/terraform-provider-microsoft365/blob/main/CHANGELOG.md). This provider follows Semantic Versioning for releases, where the version number (MAJOR.MINOR.PATCH) indicates:

- MAJOR version for incompatible API changes
- MINOR version for functionality added in a backwards compatible manner
- PATCH version for backwards compatible bug fixes

## Contributing

We welcome contributions to the Microsoft 365 Provider! Whether it's:
- Bug reports and fixes
- Feature requests and implementations
- Documentation improvements
- Example contributions

Please visit our [GitHub repository](https://github.com/deploymenttheory/terraform-provider-microsoft365) to:
- Open issues
- Submit pull requests
- View contribution guidelines
- Join the community discussions

The provider leverages the Microsoft Graph API through the Kiota-generated SDKs, making it a powerful tool for managing Microsoft 365 resources through Terraform.
