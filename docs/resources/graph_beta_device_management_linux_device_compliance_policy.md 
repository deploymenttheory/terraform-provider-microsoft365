---
page_title: "microsoft365_graph_beta_device_management_linux_device_compliance_policy Resource - terraform-provider-microsoft365"
subcategory: "Device Management"

description: |-
  Manages Linux device compliance policies in Microsoft Intune using the /deviceManagement/configurationPolicies endpoint. Linux device compliance policies define rules and settings that Linux devices must meet to be considered compliant with organizational security requirements. These policies use the Settings Catalog configuration framework to provide granular control over Linux device compliance settings.
---

# microsoft365_graph_beta_device_management_linux_device_compliance_policy (Resource)

Manages Linux device compliance policies in Microsoft Intune using the `/deviceManagement/configurationPolicies` endpoint. Linux device compliance policies define rules and settings that Linux devices must meet to be considered compliant with organizational security requirements. These policies use the Settings Catalog configuration framework to provide granular control over Linux device compliance settings.


## API Permissions

The following API permissions are required in order to use this resource.

### Microsoft Graph

- **Application**: `DeviceManagementConfiguration.ReadWrite.All` , `DeviceManagementConfiguration.Read.All`

## Example Usage

```terraform
resource "microsoft365_graph_beta_device_management_linux_device_compliance_policy" "json_config" {
  name        = "linux device compliance policy"
  description = "example"

  # Distribution restrictions matching the JSON
  distribution_allowed_distros = [
    {
      type            = "ubuntu"
      minimum_version = "11"
      maximum_version = "10"
    },
    {
      type            = "rhel"
      minimum_version = "10"
      maximum_version = "9"
    }
  ]

  # Custom compliance configuration matching the JSON
  custom_compliance_required         = true
  custom_compliance_discovery_script = "996bf3d2-958b-478d-b3d4-4c5017a5650e"
  custom_compliance_rules = jsonencode({
    "Rules" = [
      {
        "SettingName" = "BiosVersion"
        "Operator"    = "GreaterEquals"
        "DataType"    = "Version"
        "Operand"     = "2.3"
        "MoreInfoUrl" = "https://your-website.com"
        "RemediationStrings" = [
          {
            "Language"    = "en_US"
            "Title"       = "BIOS Version needs to be upgraded to at least 2.3. Value discovered was {ActualValue}."
            "Description" = "BIOS must be updated. Please refer to the link above"
          }
        ]
      },
      {
        "SettingName" = "TPMChipPresent"
        "Operator"    = "IsEquals"
        "DataType"    = "Boolean"
        "Operand"     = true
        "MoreInfoUrl" = "https://bing.com"
        "RemediationStrings" = [
          {
            "Language"    = "en_US"
            "Title"       = "TPM chip must be enabled."
            "Description" = "TPM chip must be enabled. Please refer to the link above"
          }
        ]
      }
    ]
  })

  # Device encryption required
  device_encryption_required = true

  # Password policy settings - all set to minimum value 1
  password_policy_minimum_digits    = 1
  password_policy_minimum_length    = 1
  password_policy_minimum_lowercase = 1
  password_policy_minimum_symbols   = 1
  password_policy_minimum_uppercase = 1

  # Optional scheduled action
  scheduled_actions = [
    {
      rule_name = "PasswordRequired"
      scheduled_action_configurations = [
        {
          action_type        = "block"
          grace_period_hours = 0
        }
      ]
    }
  ]
  # Optional Assignments
  assignments = [
    # Assignment targeting all devices with an include filter
    {
      type = "allDevicesAssignmentTarget"
    },
    # Assignment targeting all licensed users with an exclude filter
    {
      type = "allLicensedUsersAssignmentTarget"
    },
    # Assignment targeting a specific group with include filter
    {
      type     = "groupAssignmentTarget"
      group_id = "51a96cdd-4b9b-4849-b416-8c94a6d88797"
    },
    # Assignment targeting a specific group with exclude filter
    {
      type     = "groupAssignmentTarget"
      group_id = "b15228f4-9d49-41ed-9b4f-0e7c721fd9c2"
    },
    # Exclusion group assignments
    {
      type     = "exclusionGroupAssignmentTarget"
      group_id = "b8c661c2-fa9a-4351-af86-adc1729c343f"
    },
    {
      type     = "exclusionGroupAssignmentTarget"
      group_id = "f6ebd6ff-501e-4b3d-a00b-a2e102c3fa0f"
    }
  ]
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `name` (String) Name of the Linux device compliance policy.

### Optional

- `assignments` (Attributes Set) Assignments for the compliance policy. Each assignment specifies the target group and schedule for script execution. (see [below for nested schema](#nestedatt--assignments))
- `custom_compliance_discovery_script` (String) Reference ID to the custom compliance discovery script for Linux devices.
- `custom_compliance_required` (Boolean) Indicates whether custom compliance rules are required for Linux devices.
- `custom_compliance_rules` (String) Base64-encoded JSON string containing custom compliance rules for Linux devices.
- `description` (String) Description of the Linux device compliance policy.
- `device_encryption_required` (Boolean) Indicates whether device encryption is required for Linux devices to be considered compliant.
- `distribution_allowed_distros` (Attributes List) List of allowed Linux distributions with version constraints. (see [below for nested schema](#nestedatt--distribution_allowed_distros))
- `password_policy_minimum_digits` (Number) Minimum number of digit characters required in the Linux device password.
- `password_policy_minimum_length` (Number) Minimum length required for the Linux device password.
- `password_policy_minimum_lowercase` (Number) Minimum number of lowercase characters required in the Linux device password.
- `password_policy_minimum_symbols` (Number) Minimum number of symbol characters required in the Linux device password.
- `password_policy_minimum_uppercase` (Number) Minimum number of uppercase characters required in the Linux device password.
- `role_scope_tag_ids` (Set of String) List of Scope Tags for this Linux device compliance policy instance.
- `scheduled_actions` (Attributes List) The list of scheduled action for this rule (see [below for nested schema](#nestedatt--scheduled_actions))
- `timeouts` (Attributes) (see [below for nested schema](#nestedatt--timeouts))

### Read-Only

- `created_date_time` (String) Date and time when the Linux device compliance policy was created.
- `id` (String) Unique identifier for the Linux device compliance policy.
- `is_assigned` (Boolean) Indicates whether this Linux device compliance policy is assigned to any groups.
- `last_modified_date_time` (String) Date and time when the Linux device compliance policy was last modified.
- `platforms` (String) Platform for which this policy applies. Always 'linux' for Linux device compliance policies.
- `settings_count` (Number) Number of settings configured in this Linux device compliance policy.
- `technologies` (String) Technology stack for the policy. Always 'linuxMdm' for Linux device compliance policies.

<a id="nestedatt--assignments"></a>
### Nested Schema for `assignments`

Required:

- `type` (String) Type of assignment target. Must be one of: 'allDevicesAssignmentTarget', 'allLicensedUsersAssignmentTarget', 'groupAssignmentTarget', 'exclusionGroupAssignmentTarget'.

Optional:

- `filter_id` (String) ID of the filter to apply to the assignment.
- `filter_type` (String) Type of filter to apply. Must be one of: 'include', 'exclude', or 'none'.
- `group_id` (String) The Entra ID group ID to include or exclude in the assignment. Required when type is 'groupAssignmentTarget' or 'exclusionGroupAssignmentTarget'.


<a id="nestedatt--distribution_allowed_distros"></a>
### Nested Schema for `distribution_allowed_distros`

Required:

- `type` (String) Type of Linux distribution (e.g., 'ubuntu', 'rhel', 'centos', 'debian', 'suse').

Optional:

- `maximum_version` (String) Maximum version of the Linux distribution that is considered compliant.
- `minimum_version` (String) Minimum version of the Linux distribution that is considered compliant.


<a id="nestedatt--scheduled_actions"></a>
### Nested Schema for `scheduled_actions`

Required:

- `scheduled_action_configurations` (Attributes Set) The list of scheduled action configurations for this compliance policy (see [below for nested schema](#nestedatt--scheduled_actions--scheduled_action_configurations))

Optional:

- `rule_name` (String) Name of the scheduled action rule. always use 'PasswordRequired' for Linux device compliance policies

<a id="nestedatt--scheduled_actions--scheduled_action_configurations"></a>
### Nested Schema for `scheduled_actions.scheduled_action_configurations`

Required:

- `action_type` (String) What action to take. Possible values are: 'noAction', 'notification', 'block', 'retire', 'wipe', 'removeResourceAccessProfiles', 'pushNotification', 'remoteLock'.

Optional:

- `grace_period_hours` (Number) Number of hours to wait till the action will be enforced
- `notification_message_cc_list` (List of String) A list of group GUIDs to specify who to CC this notification message to
- `notification_template_id` (String) What notification Message template to use



<a id="nestedatt--timeouts"></a>
### Nested Schema for `timeouts`

Optional:

- `create` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
- `delete` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
- `read` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
- `update` (String) A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).

## Version History

| Version | Status | Notes |
|---------|--------|-------|
| v0.25.0-alpha | Experimental | Initial release |

## Import

Import is supported using the following syntax:

```shell
#!/bin/bash

# Import using the resource ID
terraform import microsoft365_graph_beta_device_management_linux_device_compliance_policy.example 00000000-0000-0000-0000-000000000000
```