name: Nightly Tests

permissions:
  contents: read

on:
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  test-suite:
    name: '🧪 Test Suite'
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 240
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
          
      - name: Check Out  
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
          go-version: stable

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        env:
          TF_ACC: 0
        run: |
          echo "Running unit tests..."
          go mod tidy
          go mod download
          
          if ! TF_ACC=0 go test -p 16 -timeout 10m -v -race -coverprofile=coverage.txt -covermode=atomic ./...; then
            echo "Some tests failed, but continuing with coverage upload"
          fi
          
          # Ensure we have some coverage data
          if [ ! -f coverage.txt ] || [ ! -s coverage.txt ]; then
            echo "No coverage data generated, creating minimal coverage file"
            echo "mode: atomic" > coverage.txt
          fi

      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: unittests
          name: nightly-unit-tests
          fail_ci_if_error: false
          verbose: true

      - name: Run acceptance tests
        env:
          TF_ACC: 1
          M365_TENANT_ID: ${{ secrets.M365_TENANT_ID }}
          M365_CLIENT_ID: ${{ secrets.M365_CLIENT_ID }}
          M365_CLIENT_SECRET: ${{ secrets.M365_CLIENT_SECRET }}
          M365_AUTH_METHOD: client_secret
          M365_CLOUD: public
        run: |
          echo "Running acceptance tests..."
          if [ -z "$M365_TENANT_ID" ]; then
            echo "Acceptance tests skipped - environment variables not configured"
          else
            TF_ACC=1 go test -p 10 -timeout 300m -v -race -coverprofile=acc-coverage.txt -covermode=atomic ./...
          fi

      - name: Upload acceptance test coverage to Codecov
        if: env.M365_TENANT_ID != ''
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./acc-coverage.txt
          flags: acceptancetests
          name: nightly-acceptance-tests
          fail_ci_if_error: false
          verbose: true

      - name: Upload test artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: nightly-test-results
          path: |
            coverage.txt
            acc-coverage.txt
          retention-days: 90

      - name: Generate failure report
        if: failure()
        run: |
          echo "## Nightly Test Failure Report" > failure_report.md
          echo "**Date:** $(date)" >> failure_report.md
          echo "**Workflow:** ${{ github.workflow }}" >> failure_report.md
          echo "**Run ID:** ${{ github.run_id }}" >> failure_report.md
          echo "" >> failure_report.md
          
          # Check unit test status
          if [ -f coverage.txt ]; then
            echo "### Unit Tests: ✅ Completed" >> failure_report.md
            COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}' || echo "N/A")
            echo "- Coverage: $COVERAGE" >> failure_report.md
          else
            echo "### Unit Tests: ❌ Failed" >> failure_report.md
            echo "- No coverage file generated - unit tests likely failed" >> failure_report.md
          fi
          echo "" >> failure_report.md
          
          # Check acceptance test status
          if [ -f acc-coverage.txt ]; then
            echo "### Acceptance Tests: ✅ Completed" >> failure_report.md
            ACC_COVERAGE=$(go tool cover -func=acc-coverage.txt | grep total | awk '{print $3}' || echo "N/A")
            echo "- Coverage: $ACC_COVERAGE" >> failure_report.md
          else
            echo "### Acceptance Tests: ❌ Failed or Skipped" >> failure_report.md
            if [ -z "${{ secrets.M365_TENANT_ID }}" ]; then
              echo "- Skipped: Environment variables not configured" >> failure_report.md
            else
              echo "- Failed: Check logs for details" >> failure_report.md
            fi
          fi
          echo "" >> failure_report.md
          
          echo "### Links" >> failure_report.md
          echo "- [Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> failure_report.md
          echo "- [Codecov Report](https://codecov.io/gh/${{ github.repository }})" >> failure_report.md

      - name: Create Issue on Failure
        if: failure()
        run: |
          DATE=$(date -I)
          BODY=$(cat failure_report.md)
          gh issue create \
            --title "Nightly Tests Failed - $DATE" \
            --body "$BODY" \
            --label "bug,testing,automated"
        env:
          GH_TOKEN: ${{ github.token }}