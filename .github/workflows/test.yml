# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - 'examples/**'
      - 'website/**'
      - '.vscode/**'
      - '.idea/**'
      - '**/*.txt'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.svg'
      - '.golangci.yml'
      - 'Makefile'
      - 'scripts/**'
      - '.dockerignore'
      - 'Dockerfile'
  push:
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - 'examples/**'
      - 'website/**'
      - '.vscode/**'
      - '.idea/**'
      - '**/*.txt'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.svg'
      - '.golangci.yml'
      - 'Makefile'
      - 'scripts/**'
      - '.dockerignore'
      - 'Dockerfile'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: '1.9.4'
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.5.*'
          - '1.6.*'
          - '1.7.*'
          - '1.8.*'
          - '1.9.*'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          M365_TENANT_ID: "env-tenant-id"
          M365_AUTH_METHOD: "env-device_code"
          M365_CLIENT_ID: "env-client-id"
          M365_CLIENT_SECRET: "env-client-secret"
          M365_CLIENT_CERTIFICATE_FILE_PATH: "env-client-certificate"
          M365_CLIENT_CERTIFICATE_PASSWORD: "env-client-cert-password"
          M365_USERNAME: "env-username"
          M365_PASSWORD: "env-password"
          M365_REDIRECT_URL: "env-redirect-url"
          M365_USE_PROXY: "true"
          M365_PROXY_URL: "http://env-proxy-url:8080"
          M365_CLOUD: "gcc"
          M365_ENABLE_CHAOS: "true"
          M365_TELEMETRY_OPTOUT: "true"
          M365_DEBUG_MODE: "true"
        run: go test -v -cover ./...
